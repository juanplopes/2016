<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>This is 2016, not 2012.</title>
 <link href="http://juanlopes.net/2016/atom.xml" rel="self"/>
 <link href="http://juanlopes.net/2016"/>
 <updated>2012-05-14T12:10:14-03:00</updated>
 <id>http://juanlopes.net/2016</id>
 <author>
   <name>Juan Lopes</name>
   <email>me@juanlopes.net</email>
 </author>

 
 <entry>
   <title>Resposta: Project Euler &#35;1 (revisado)</title>
   <link href="http://juanlopes.net/2016/project-euler-1-resposta"/>
   <updated>2012-05-14T00:00:00-03:00</updated>
   <id>http://juanlopes.net/2016/project-euler-1-resposta</id>
   <content type="html">&lt;p&gt;&lt;em&gt;Quem respondeu: &lt;a href='https://twitter.com/danielpresser'&gt;Daniel Presser&lt;/a&gt;, &lt;a href='http://twitter.com/ariassp'&gt;Victor Arias&lt;/a&gt; e &lt;a href='http://twitter.com/rodrigovidal'&gt;Rodrigo Vidal&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Viu como não era tão fácil?&lt;/p&gt;

&lt;p&gt;O problema da solução original é que ela precisava verificar cada número entre o início e o fim do intervalo executando divisões entre eles. Para 1000 números o tempo de execução era até razoável, mas quando passava da casa das centenas de milhões, era preciso encontrar um algoritmo melhor.&lt;/p&gt;

&lt;p&gt;A sacada do algoritmo era perceber que a soma dos números divisíveis por 3 tem a forma:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
3 + 6 + 9 + 12 + 15 + ... + 999
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Que podem se escritos como:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
3 * (1 + 2 + 3 + 4 + 5 + ... + 333)
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Isso é a fórmula de uma &lt;a href='http://en.wikipedia.org/wiki/Arithmetic_progression'&gt;PA&lt;/a&gt;. Como o &lt;a href='http://twitter.com/ariassp'&gt;Victor Arias&lt;/a&gt; apontou, essa soma tem a forma:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
3 * 333 * 334 / 2
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Generalizando:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
3 * n * (n+1) / 2
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Perceba que o somatório acontece entre 1 e 333, pois 999/3 = 333. Para o divisor 5, o valor de &amp;#8220;n&amp;#8221; deverá ser 999/5 = 199. Assim, definimos S como sendo &amp;#8220;a soma de todos os múltiplos de k entre 1 e x&amp;#8221;&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='python'&gt;&lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;S&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;k&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;x&lt;/span&gt;&lt;span class='p'&gt;):&lt;/span&gt;
    &lt;span class='n'&gt;n&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='n'&gt;x&lt;/span&gt;&lt;span class='o'&gt;/&lt;/span&gt;&lt;span class='n'&gt;k&lt;/span&gt;
    &lt;span class='k'&gt;return&lt;/span&gt; &lt;span class='n'&gt;k&lt;/span&gt;&lt;span class='o'&gt;*&lt;/span&gt;&lt;span class='n'&gt;n&lt;/span&gt;&lt;span class='o'&gt;*&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;n&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;&lt;span class='mi'&gt;1&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;&lt;span class='o'&gt;/&lt;/span&gt;&lt;span class='mi'&gt;2&lt;/span&gt;

&lt;span class='k'&gt;assert&lt;/span&gt; &lt;span class='n'&gt;S&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='mi'&gt;3&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='mi'&gt;999&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='o'&gt;==&lt;/span&gt; &lt;span class='mi'&gt;166833&lt;/span&gt;
&lt;span class='k'&gt;assert&lt;/span&gt; &lt;span class='n'&gt;S&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='mi'&gt;5&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='mi'&gt;999&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='o'&gt;==&lt;/span&gt; &lt;span class='mi'&gt;99500&lt;/span&gt;
&lt;span class='k'&gt;assert&lt;/span&gt; &lt;span class='n'&gt;S&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='mi'&gt;3&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='mi'&gt;999&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;&lt;span class='n'&gt;S&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='mi'&gt;5&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='mi'&gt;999&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='o'&gt;==&lt;/span&gt; &lt;span class='mi'&gt;266333&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Perceba que se somarmos os múltiplos de 3 e 5 até 999, o valor não é o esperado (233168). Isso acontece porque números divisíveis por 3 e 5 ao mesmo tempo são contados tanto como divisores de 3 como de 5, e seu valor acaba se repedindo na soma. Para evitar esse problema, basta definir a função &lt;code&gt;euler1(limit)&lt;/code&gt; como:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='python'&gt;&lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;euler1&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;limit&lt;/span&gt;&lt;span class='p'&gt;):&lt;/span&gt;
    &lt;span class='k'&gt;return&lt;/span&gt; &lt;span class='n'&gt;S&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='mi'&gt;3&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;limit&lt;/span&gt;&lt;span class='o'&gt;-&lt;/span&gt;&lt;span class='mi'&gt;1&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='o'&gt;+&lt;/span&gt; &lt;span class='n'&gt;S&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='mi'&gt;5&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;limit&lt;/span&gt;&lt;span class='o'&gt;-&lt;/span&gt;&lt;span class='mi'&gt;1&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='o'&gt;-&lt;/span&gt; &lt;span class='n'&gt;S&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='mi'&gt;15&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;limit&lt;/span&gt;&lt;span class='o'&gt;-&lt;/span&gt;&lt;span class='mi'&gt;1&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;

&lt;span class='k'&gt;assert&lt;/span&gt; &lt;span class='n'&gt;euler1&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='mi'&gt;1000&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='o'&gt;==&lt;/span&gt; &lt;span class='mi'&gt;233168&lt;/span&gt;
&lt;span class='k'&gt;assert&lt;/span&gt; &lt;span class='n'&gt;euler1&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='mi'&gt;1234&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='o'&gt;==&lt;/span&gt; &lt;span class='mi'&gt;354858&lt;/span&gt;
&lt;span class='k'&gt;assert&lt;/span&gt; &lt;span class='n'&gt;euler1&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='mi'&gt;1000000000&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='o'&gt;==&lt;/span&gt; &lt;span class='mi'&gt;233333333166666668&lt;/span&gt;
&lt;span class='k'&gt;assert&lt;/span&gt; &lt;span class='n'&gt;euler1&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='mi'&gt;123456789123456789&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='o'&gt;==&lt;/span&gt; &lt;span class='mi'&gt;3556368382157191567225525788624704&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Assim, removemos as duplicidades por excluir uma vez da soma os números que são divisíveis por 3 e 5, i.e., os divisíveis por 15.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Plágio Literário</title>
   <link href="http://juanlopes.net/2016/plagio-literario"/>
   <updated>2012-05-14T00:00:00-03:00</updated>
   <id>http://juanlopes.net/2016/plagio-literario</id>
   <content type="html">&lt;p&gt;A cena literária em 2016 cresceu assustadoramente. Os livros técnicos sobre programação são os mais vendidos. Provavelmente reflexo do estouro da bolha de tecnologia, que deixou muitos programadores desempregados.&lt;/p&gt;

&lt;p&gt;Com o crescimento da venda de livros, cresceram também os casos de plágio. Muitos autores sofriam com seus livros sendo copiados e revendidos como novos livros.&lt;/p&gt;

&lt;p&gt;Os plagiadores eram espertos e, para tentar evitar as denúncias de plágio, modificavam um pouco o texto original, adicionando, removendo e trocando algumas palvras. Por exemplo, uma frase que originalmente era:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
Para seguir um modelo em cascata, o progresso de uma fase para a próxima se dá 
de uma forma puramente sequencial.
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;pode tornar-se&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
Para obedecer um modelo em cascata, a mudança de uma fase para outra se dá de 
forma completamente sequencial.
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Basta modificar 5 palavras (seguir -&amp;gt; obedecer, o -&amp;gt; a, progresso -&amp;gt; mudança, próxima -&amp;gt; outra, puramente -&amp;gt; completamente) e remover 2 (a, uma). Então, de 21 palavras originais, com 7 mudanças é possível transformar um texto no outro.&lt;/p&gt;

&lt;p&gt;Para esse problema, define-se &amp;#8220;palavra&amp;#8221; qualquer sequencia contígua de letras do alfabeto.&lt;/p&gt;

&lt;p&gt;Então, dados dois trechos de texto, é preciso verificar o menor número de edições (inserções, remoções e alterações de palavras) para transformar um texto no outro.&lt;/p&gt;

&lt;p&gt;Exemplos:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='python'&gt;&lt;span class='k'&gt;assert&lt;/span&gt; &lt;span class='n'&gt;plagio&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;u&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class='s'&gt;Para seguir   um modelo em cascata, o progresso de uma fase para a próxima se dá &lt;/span&gt;
&lt;span class='s'&gt;de uma forma puramente     sequencial.&lt;/span&gt;
&lt;span class='s'&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s'&gt;u&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class='s'&gt;Para obedecer um modelo em cascata, a mudança   de uma fase para   outra   se dá &lt;/span&gt;
&lt;span class='s'&gt;de     forma completamente sequencial.&lt;/span&gt;
&lt;span class='s'&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='o'&gt;==&lt;/span&gt; &lt;span class='mi'&gt;7&lt;/span&gt;

&lt;span class='k'&gt;assert&lt;/span&gt; &lt;span class='n'&gt;plagio&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;u&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class='s'&gt;Para seguir   um modelo em cascata, o progresso de uma fase para a próxima se dá &lt;/span&gt;
&lt;span class='s'&gt;de uma forma puramente     sequencial.&lt;/span&gt;
&lt;span class='s'&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s'&gt;u&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class='s'&gt;Bata as claras em neve, misture as gemas e o açúcar e torne a bater.&lt;/span&gt;
&lt;span class='s'&gt;Depois, misture a farinha e o suco de laranja. Por último acrescente o fermento.&lt;/span&gt;
&lt;span class='s'&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='o'&gt;==&lt;/span&gt; &lt;span class='mi'&gt;26&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Resposta será publicada em 21/maio/2012.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Alô Telefonia e Internet</title>
   <link href="http://juanlopes.net/2016/alo-internet"/>
   <updated>2012-05-09T00:00:00-03:00</updated>
   <id>http://juanlopes.net/2016/alo-internet</id>
   <content type="html">&lt;p&gt;Em 2016, a internet no Brasil ainda é ruim.&lt;/p&gt;

&lt;p&gt;No final de 2015, a Anatel baixou uma portaria que permite a cada cliente insatisfeito sublocar e operar uma parte da malha de telecomunicações no seu estado. Com isso, os programadores, maiores afetados pela incompetência das operadoras da época, fundaram operadoras próprias, que rapidamente ganharam o gosto popular.&lt;/p&gt;

&lt;p&gt;João também resolveu abrir sua própria operadora: Alô Telefonia e Internet, que presta serviços de internet para empresas da sua região.&lt;/p&gt;

&lt;p&gt;Rapidamente ele percebeu que o recurso mais caro para operação são os cabos, que permitem conectar sua rede às dos seus clientes.&lt;/p&gt;

&lt;p&gt;Para diminuir custos, a operadora de João não mantém um cabo entre a sua rede e cada um dos seus clientes, o que poderia custar caro demais para manter. Na verdade, quando possível, ele tenta reaproveitar o caminho já percorrido até um cliente para chegar a outro resultando numa distância total menor.&lt;/p&gt;
&lt;div class='center'&gt;
    &lt;div class='pic inline'&gt;
        &lt;img src='/imgs/alo-internet/bad.png' /&gt;
        &lt;p&gt;Assim é ruim.&lt;/p&gt;
    &lt;/div&gt;

    &lt;div class='pic inline'&gt;
        &lt;img src='/imgs/alo-internet/good.png' /&gt;
        &lt;p&gt;Assim é melhor.&lt;/p&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Com isso, surgiu o problema de decidir quais clientes a Alô irá conectar para permitir que todos tenham internet, porém utilizando a menor extensão de cabo possível. João é um bom programador, e prefere escrever um programa que faça isso. Como ele nunca estudou muito sobre algoritmos, ele pediu a sua ajuda.&lt;/p&gt;

&lt;p&gt;A única informação que você tem disponível é o nome e posição geográfica de cada cliente. O objetivo é diminuir a soma total do comprimento dos cabos usados para conectar esses clientes.&lt;/p&gt;

&lt;p&gt;Por exemplo, suponha que você tenha a seguinte lista de clientes e suas posições geográficas. Para fins práticos, você pode considerar os clientes como pontos em um plano cartesiano:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='python'&gt;&lt;span class='n'&gt;clientes&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='p'&gt;(&lt;/span&gt;
    &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;Alô&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='mf'&gt;0.0&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='mf'&gt;1.0&lt;/span&gt;&lt;span class='p'&gt;),&lt;/span&gt; 
    &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;C1&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;  &lt;span class='mf'&gt;0.0&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='mf'&gt;0.0&lt;/span&gt;&lt;span class='p'&gt;),&lt;/span&gt; 
    &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;C2&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;  &lt;span class='mf'&gt;1.0&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='mf'&gt;0.0&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
&lt;span class='p'&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Espera-se que a solução seja capaz de retornar uma lista exibindo as conexões que devem ser feitas entre a Alô e seus clientes, bem como o comprimento do cabo a ser utilizado em cada conexão. E.g.:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='python'&gt;&lt;span class='k'&gt;assert&lt;/span&gt; &lt;span class='nb'&gt;set&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;conexoes&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;clientes&lt;/span&gt;&lt;span class='p'&gt;))&lt;/span&gt; &lt;span class='o'&gt;==&lt;/span&gt; &lt;span class='nb'&gt;set&lt;/span&gt;&lt;span class='p'&gt;((&lt;/span&gt;
    &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;Alô&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s'&gt;&amp;quot;C1&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='mf'&gt;1.0&lt;/span&gt;&lt;span class='p'&gt;),&lt;/span&gt; 
    &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;C1&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;  &lt;span class='s'&gt;&amp;quot;C2&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='mf'&gt;1.0&lt;/span&gt;&lt;span class='p'&gt;),&lt;/span&gt; 
&lt;span class='p'&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Perceba que pode existir mais de uma solução válida. Para João qualquer uma serve, desde que minimize o comprimento total. Talvez faça mais sentido verificar o comprimento total, pois esse é único:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='python'&gt;&lt;span class='k'&gt;assert&lt;/span&gt; &lt;span class='n'&gt;soma_conexoes&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;clientes&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='o'&gt;==&lt;/span&gt; &lt;span class='mf'&gt;2.0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Para servir de guia, segue um exemplo mais complexo e uma resposta possível para o problema:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='python'&gt;&lt;span class='n'&gt;clientes&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='p'&gt;(&lt;/span&gt;
    &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;Alo&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='mf'&gt;0.0&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='mf'&gt;1.0&lt;/span&gt;&lt;span class='p'&gt;),&lt;/span&gt; 
    &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;C1&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;  &lt;span class='mi'&gt;50&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='mi'&gt;20&lt;/span&gt;&lt;span class='p'&gt;),&lt;/span&gt; 
    &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;C2&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;  &lt;span class='mi'&gt;35&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='o'&gt;-&lt;/span&gt;&lt;span class='mi'&gt;200&lt;/span&gt;&lt;span class='p'&gt;),&lt;/span&gt; 
    &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;C3&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;  &lt;span class='mf'&gt;72.6&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='mi'&gt;20&lt;/span&gt;&lt;span class='p'&gt;),&lt;/span&gt; 
    &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;C4&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;  &lt;span class='mi'&gt;10&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='mi'&gt;10&lt;/span&gt;&lt;span class='p'&gt;),&lt;/span&gt; 
    &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;C5&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;  &lt;span class='mi'&gt;50&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='mi'&gt;21&lt;/span&gt;&lt;span class='p'&gt;),&lt;/span&gt; 
    &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;C6&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;  &lt;span class='mi'&gt;50&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='mi'&gt;22&lt;/span&gt;&lt;span class='p'&gt;),&lt;/span&gt; 
    &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;C7&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;  &lt;span class='mi'&gt;50&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='mi'&gt;23&lt;/span&gt;&lt;span class='p'&gt;),&lt;/span&gt; 
    &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;C8&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;  &lt;span class='mi'&gt;50&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='mi'&gt;24&lt;/span&gt;&lt;span class='p'&gt;),&lt;/span&gt; 
    &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;C9&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;  &lt;span class='mi'&gt;50&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='mi'&gt;25&lt;/span&gt;&lt;span class='p'&gt;),&lt;/span&gt; 
    &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;C10&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;  &lt;span class='mi'&gt;50&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='mi'&gt;26&lt;/span&gt;&lt;span class='p'&gt;),&lt;/span&gt; 
    &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;C11&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;  &lt;span class='mi'&gt;50&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='mi'&gt;27&lt;/span&gt;&lt;span class='p'&gt;),&lt;/span&gt; 
&lt;span class='p'&gt;)&lt;/span&gt;

&lt;span class='k'&gt;assert&lt;/span&gt; &lt;span class='nb'&gt;set&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;conexoes&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;clientes&lt;/span&gt;&lt;span class='p'&gt;))&lt;/span&gt; &lt;span class='o'&gt;==&lt;/span&gt; &lt;span class='nb'&gt;set&lt;/span&gt;&lt;span class='p'&gt;((&lt;/span&gt;
    &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;#39;Alo&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s'&gt;&amp;#39;C4&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='mf'&gt;13.45362404707371&lt;/span&gt;&lt;span class='p'&gt;),&lt;/span&gt; 
    &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;#39;C4&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s'&gt;&amp;#39;C1&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='mf'&gt;41.23105625617661&lt;/span&gt;&lt;span class='p'&gt;),&lt;/span&gt; 
    &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;#39;C1&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s'&gt;&amp;#39;C5&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='mf'&gt;1.0&lt;/span&gt;&lt;span class='p'&gt;),&lt;/span&gt; 
    &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;#39;C5&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s'&gt;&amp;#39;C6&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='mf'&gt;1.0&lt;/span&gt;&lt;span class='p'&gt;),&lt;/span&gt; 
    &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;#39;C6&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s'&gt;&amp;#39;C7&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='mf'&gt;1.0&lt;/span&gt;&lt;span class='p'&gt;),&lt;/span&gt; 
    &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;#39;C7&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s'&gt;&amp;#39;C8&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='mf'&gt;1.0&lt;/span&gt;&lt;span class='p'&gt;),&lt;/span&gt; 
    &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;#39;C8&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s'&gt;&amp;#39;C9&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='mf'&gt;1.0&lt;/span&gt;&lt;span class='p'&gt;),&lt;/span&gt; 
    &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;#39;C9&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s'&gt;&amp;#39;C10&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='mf'&gt;1.0&lt;/span&gt;&lt;span class='p'&gt;),&lt;/span&gt; 
    &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;#39;C10&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s'&gt;&amp;#39;C11&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='mf'&gt;1.0&lt;/span&gt;&lt;span class='p'&gt;),&lt;/span&gt; 
    &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;#39;C1&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s'&gt;&amp;#39;C3&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='mf'&gt;22.599999999999994&lt;/span&gt;&lt;span class='p'&gt;),&lt;/span&gt; 
    &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;#39;Alo&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s'&gt;&amp;#39;C2&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='mf'&gt;204.0245083317198&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
&lt;span class='p'&gt;))&lt;/span&gt;


&lt;span class='k'&gt;assert&lt;/span&gt; &lt;span class='n'&gt;soma_conexoes&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;clientes&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='o'&gt;==&lt;/span&gt; &lt;span class='mf'&gt;288.309188635&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Resposta será publicada em 16/maio/2012.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Project Euler &#35;1 (revisado)</title>
   <link href="http://juanlopes.net/2016/project-euler-1"/>
   <updated>2012-05-07T00:00:00-03:00</updated>
   <id>http://juanlopes.net/2016/project-euler-1</id>
   <content type="html">&lt;p&gt;Em 2016, o &lt;a href='http://projecteuler.net/'&gt;Project Euler&lt;/a&gt; ganhou muita importância. É possível encontrar centenas (se não milhares) de posts em blogs e repositórios do github com soluções nas mais variadas linguagens.&lt;/p&gt;

&lt;p&gt;Aparentemente o problema mais famoso é o &lt;a href='http://projecteuler.net/problem=1'&gt;primeiro&lt;/a&gt;, que pede a soma de todos os números divisíveis por 3 ou 5 menores que 1000. Uma solução simples (e eficaz) em python pareceria com:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='python'&gt;&lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;euler1&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;limit&lt;/span&gt;&lt;span class='p'&gt;):&lt;/span&gt;
    &lt;span class='n'&gt;answer&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;&lt;span class='mi'&gt;0&lt;/span&gt;
    &lt;span class='k'&gt;for&lt;/span&gt; &lt;span class='n'&gt;i&lt;/span&gt; &lt;span class='ow'&gt;in&lt;/span&gt; &lt;span class='nb'&gt;range&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;limit&lt;/span&gt;&lt;span class='p'&gt;):&lt;/span&gt;
        &lt;span class='k'&gt;if&lt;/span&gt; &lt;span class='n'&gt;i&lt;/span&gt;&lt;span class='o'&gt;%&lt;/span&gt;&lt;span class='mi'&gt;3&lt;/span&gt;&lt;span class='o'&gt;==&lt;/span&gt;&lt;span class='mi'&gt;0&lt;/span&gt; &lt;span class='ow'&gt;or&lt;/span&gt; &lt;span class='n'&gt;i&lt;/span&gt;&lt;span class='o'&gt;%&lt;/span&gt;&lt;span class='mi'&gt;5&lt;/span&gt;&lt;span class='o'&gt;==&lt;/span&gt;&lt;span class='mi'&gt;0&lt;/span&gt;&lt;span class='p'&gt;:&lt;/span&gt;
            &lt;span class='n'&gt;answer&lt;/span&gt;&lt;span class='o'&gt;+=&lt;/span&gt;&lt;span class='n'&gt;i&lt;/span&gt;
    &lt;span class='k'&gt;return&lt;/span&gt; &lt;span class='n'&gt;answer&lt;/span&gt;

&lt;span class='k'&gt;print&lt;/span&gt; &lt;span class='n'&gt;euler1&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='mi'&gt;1000&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Essa é uma solução válida para esse problema. Funciona muito bem até 1000. O problema é que ela não escala tão bem. Executar &lt;code&gt;euler1(1000000000)&lt;/code&gt; demoraria tempo suficiente para desistir.&lt;/p&gt;

&lt;p&gt;Esse é o problema. Desenvolva uma solução que rode em tempo satisfatório para valores bem maiores que 1000. Não há limite esperado. Qual o máximo que a sua solução resolveria em, digamos, menos de 1 minuto?&lt;/p&gt;

&lt;p&gt;Seguem alguns casos de teste com alguns valores grandes:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='python'&gt;&lt;span class='k'&gt;assert&lt;/span&gt; &lt;span class='n'&gt;euler1&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='mi'&gt;1000&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='o'&gt;==&lt;/span&gt; &lt;span class='mi'&gt;233168&lt;/span&gt;
&lt;span class='k'&gt;assert&lt;/span&gt; &lt;span class='n'&gt;euler1&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='mi'&gt;1234&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='o'&gt;==&lt;/span&gt; &lt;span class='mi'&gt;354858&lt;/span&gt;
&lt;span class='k'&gt;assert&lt;/span&gt; &lt;span class='n'&gt;euler1&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='mi'&gt;1000000000&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='o'&gt;==&lt;/span&gt; &lt;span class='mi'&gt;233333333166666668&lt;/span&gt;
&lt;span class='k'&gt;assert&lt;/span&gt; &lt;span class='n'&gt;euler1&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='mi'&gt;123456789123456789&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='o'&gt;==&lt;/span&gt; &lt;span class='mi'&gt;3556368382157191567225525788624704&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Resposta será publicada em 14/maio/2012.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;</content>
 </entry>
 
 
</feed>